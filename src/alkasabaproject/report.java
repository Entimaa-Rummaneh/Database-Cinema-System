/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alkasabaproject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class report extends javax.swing.JFrame {

    /**
     * Creates new form report
     */
    private String dbURL;
    private String dbUsername = "root";
    private String dbPassword = "1180070";
    private String URL = "127.0.0.1";
    private String port = "3306";
    private String dbName = "Alkasaba_cinema";
    private Connection con;
    PreparedStatement ps = null;
    ResultSet srt = null;
    public report() {
        initComponents();
    }
private Connection connection()  {  //throws ClassNotFoundException, SQLException
		
	dbURL = "jdbc:mysql://" + URL + ":" + port + "/" + dbName + "?verifyServerCertificate=false";
	Properties p = new Properties();
	p.setProperty("user", dbUsername);
	p.setProperty("password", dbPassword);
	p.setProperty("useSSL", "false");
	p.setProperty("autoReconnect", "true");
	
	try{
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection (dbURL, p);
            //JOptionPane.showMessageDialog(null,"conncted");
            return con;
        }
		
        catch (SQLException ex){
            Logger.getLogger(Foodmenu.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"not conncted1");
            return null;
        }
        catch (ClassNotFoundException ex1){
            Logger.getLogger(Foodmenu.class.getName()).log(Level.SEVERE, null, ex1);
            JOptionPane.showMessageDialog(null,"not conncted2");
            return null;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        one1 = new javax.swing.JTextField();
        two = new javax.swing.JTextField();
        one = new javax.swing.JTextField();
        two2 = new javax.swing.JTextField();
        three2 = new javax.swing.JTextField();
        four2 = new javax.swing.JTextField();
        five2 = new javax.swing.JTextField();
        six2 = new javax.swing.JTextField();
        seven2 = new javax.swing.JTextField();
        eight2 = new javax.swing.JTextField();
        nine2 = new javax.swing.JTextField();
        ten2 = new javax.swing.JTextField();
        elev2 = new javax.swing.JTextField();
        twelve2 = new javax.swing.JTextField();
        report = new javax.swing.JButton();
        three = new javax.swing.JTextField();
        four = new javax.swing.JTextField();
        five = new javax.swing.JTextField();
        six = new javax.swing.JTextField();
        seven = new javax.swing.JTextField();
        eight = new javax.swing.JTextField();
        nine = new javax.swing.JTextField();
        ten = new javax.swing.JTextField();
        elev = new javax.swing.JTextField();
        twelve = new javax.swing.JTextField();
        sub = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        sum = new javax.swing.JTextField();
        sum2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        sub5 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jLabel1.setBackground(new java.awt.Color(255, 51, 102));
        jLabel1.setText("January");

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Februrary");

        jLabel3.setText("March");

        jLabel4.setText("April");

        jLabel5.setText("May");

        jLabel6.setText("June");

        jLabel7.setText("July");

        jLabel8.setText("August");

        jLabel9.setText("September");

        jLabel10.setText("October");

        jLabel11.setText("November");

        jLabel12.setText("December");

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendar.png"))); // NOI18N
        jLabel13.setText("Months");

        jLabel14.setText("Costs");

        jLabel15.setText("Profits");

        one1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                one1ActionPerformed(evt);
            }
        });

        report.setText("Report");
        report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportActionPerformed(evt);
            }
        });

        sub.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jLabel16.setText("Sum");

        jLabel17.setText("Annual profits");

        jLabel20.setText("Cost");

        javax.swing.GroupLayout subLayout = new javax.swing.GroupLayout(sub);
        sub.setLayout(subLayout);
        subLayout.setHorizontalGroup(
            subLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(subLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subLayout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(sub5, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(subLayout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sum, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sum2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        subLayout.setVerticalGroup(
            subLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, subLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(subLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(sum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(subLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sub5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jLabel18.setIcon(new javax.swing.ImageIcon("C:\\1202\\Database\\AlkasabaProject\\src\\profits.png")); // NOI18N

        jLabel19.setIcon(new javax.swing.ImageIcon("C:\\1202\\Database\\AlkasabaProject\\src\\budget.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                                .addComponent(jLabel18)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(173, 173, 173))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel8)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel9)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)))
                                            .addComponent(jLabel10)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel12)
                                                .addComponent(jLabel11)))
                                        .addGap(183, 183, 183)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ten, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(elev, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(twelve, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(183, 183, 183)
                                        .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(two2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(three2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(four2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(five2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(six2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(seven2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eight2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nine2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ten2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(elev2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(twelve2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(one1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                .addGap(300, 300, 300))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(report)
                        .addGap(75, 75, 75)
                        .addComponent(sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(one1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(ten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(elev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(twelve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(two2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(three2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(four2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(five2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(six2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seven2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eight2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(nine2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ten2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(elev2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(twelve2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(sub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(report)
                        .addGap(32, 32, 32))))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void one1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_one1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_one1ActionPerformed

    private void reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportActionPerformed
        // TODO add your handling code here:
        con = connection();
        try{
            String sql = "select month(order_date) AS MT,sum(price*quantity) AS PR \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food.meal_id\n" +
            "and month(order_date) = 1" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("PR");
                int MONTH =srt.getInt("MT");
                one.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date) AS MT,sum(price*quantity) AS PR \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food.meal_id\n" +
            "and month(order_date) = 2" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("PR");
                int MONTH =srt.getInt("MT");
                two.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date) AS MT,sum(price*quantity) AS PR \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food.meal_id\n" +
            "and month(order_date) = 3" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("PR");
                int MONTH =srt.getInt("MT");
                three.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date) AS MT,sum(price*quantity) AS PR \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food.meal_id\n" +
            "and month(order_date) = 4" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("PR");
                int MONTH =srt.getInt("MT");
                four.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date) AS MT,sum(price*quantity) AS PR \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food.meal_id\n" +
            "and month(order_date) = 5" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("PR");
                int MONTH =srt.getInt("MT");
                five.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date) AS MT,sum(price*quantity) AS PR \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food.meal_id\n" +
            "and month(order_date) = 6" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("PR");
                int MONTH =srt.getInt("MT");
                six.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date) AS MT,sum(price*quantity) AS PR \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food.meal_id\n" +
            "and month(order_date) = 7" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("PR");
                int MONTH =srt.getInt("MT");
                seven.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date) AS MT,sum(price*quantity) AS PR \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food.meal_id\n" +
            "and month(order_date) = 8" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("PR");
                int MONTH =srt.getInt("MT");
                eight.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date) AS MT,sum(price*quantity) AS PR \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food.meal_id\n" +
            "and month(order_date) = 9" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("PR");
                int MONTH =srt.getInt("MT");
                nine.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date) AS MT,sum(price*quantity) AS PR \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food.meal_id\n" +
            "and month(order_date) = 10" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("PR");
                int MONTH =srt.getInt("MT");
                ten.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date) AS MT,sum(price*quantity) AS PR \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food.meal_id\n" +
            "and month(order_date) = 11" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("PR");
                int MONTH =srt.getInt("MT");
                elev.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date) AS MT,sum(price*quantity) AS PR \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food.meal_id\n" +
            "and month(order_date) = 12" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("PR");
                int MONTH =srt.getInt("MT");
                twelve.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }

        //cost
        try{
            String sql = "select month(order_date),sum(cost*quantity) \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food .meal_id\n" +
            "and month(order_date) = 1" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("sum(cost*quantity)");
                int MONTH =srt.getInt("month(order_date)");
                one1.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date),sum(cost*quantity) \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food .meal_id\n" +
            "and month(order_date) = 2" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("sum(cost*quantity)");
                int MONTH =srt.getInt("month(order_date)");
                two2.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date),sum(cost*quantity) \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food .meal_id\n" +
            "and month(order_date) = 3" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("sum(cost*quantity)");
                int MONTH =srt.getInt("month(order_date)");
                three2.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date),sum(cost*quantity) \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food .meal_id\n" +
            "and month(order_date) = 4" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("sum(cost*quantity)");
                int MONTH =srt.getInt("month(order_date)");
                four2.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date),sum(cost*quantity) \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food .meal_id\n" +
            "and month(order_date) = 5" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("sum(cost*quantity)");
                int MONTH =srt.getInt("month(order_date)");
                five2.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }

        try{
            String sql = "select month(order_date),sum(cost*quantity) \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food .meal_id\n" +
            "and month(order_date) = 6" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("sum(cost*quantity)");
                int MONTH =srt.getInt("month(order_date)");
                six2.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date),sum(cost*quantity) \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food .meal_id\n" +
            "and month(order_date) = 7" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("sum(cost*quantity)");
                int MONTH =srt.getInt("month(order_date)");
                seven2.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date),sum(cost*quantity) \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food .meal_id\n" +
            "and month(order_date) = 8" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("sum(cost*quantity)");
                int MONTH =srt.getInt("month(order_date)");
                eight2.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date),sum(cost*quantity) \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food .meal_id\n" +
            "and month(order_date) = 9" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("sum(cost*quantity)");
                int MONTH =srt.getInt("month(order_date)");
                nine2.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date),sum(cost*quantity) \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food .meal_id\n" +
            "and month(order_date) = 10" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("sum(cost*quantity)");
                int MONTH =srt.getInt("month(order_date)");
                ten2.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date),sum(cost*quantity) \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food .meal_id\n" +
            "and month(order_date) = 11" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("sum(cost*quantity)");
                int MONTH =srt.getInt("month(order_date)");
                elev2.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        try{
            String sql = "select month(order_date),sum(cost*quantity) \n" +
            "from Food,cust2food  \n" +
            "where Food.meal_id=cust2food .meal_id\n" +
            "and month(order_date) = 12" ;
            ps = con.prepareStatement(sql);//sql
            srt= ps.executeQuery();
            while (srt.next()){
                float price =srt.getFloat("sum(cost*quantity)");
                int MONTH =srt.getInt("month(order_date)");
                twelve2.setText(String.valueOf(price));
            }

        }catch(Exception ex){
        }finally{
        }
        float sum1=Float.parseFloat(one.getText())+Float.parseFloat(two.getText())+Float.parseFloat(three.getText())+Float.parseFloat(four.getText())+Float.parseFloat(five.getText())+Float.parseFloat(six.getText())+Float.parseFloat(seven.getText())+Float.parseFloat(eight.getText())+Float.parseFloat(nine.getText())+Float.parseFloat(ten.getText())+Float.parseFloat(elev.getText())+Float.parseFloat(twelve.getText());
        //  sum.showMessageDialog(null,"not conncted");
        sum.setText(String.valueOf(sum1));
        float sumx=Float.parseFloat(one1.getText())+Float.parseFloat(two2.getText())+Float.parseFloat(three2.getText())+Float.parseFloat(four2.getText())+Float.parseFloat(five2.getText())+Float.parseFloat(six2.getText())+Float.parseFloat(seven2.getText())+Float.parseFloat(eight2.getText())+Float.parseFloat(nine2.getText())+Float.parseFloat(ten2.getText())+Float.parseFloat(elev2.getText())+Float.parseFloat(twelve2.getText());
        //  sum.showMessageDialog(null,"not conncted");
        sum2.setText(String.valueOf(sumx));
        float subx=Float.parseFloat(sum.getText())-Float.parseFloat(sum2.getText());

        sub5.setText(String.valueOf(subx));

    }//GEN-LAST:event_reportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField eight;
    private javax.swing.JTextField eight2;
    private javax.swing.JTextField elev;
    private javax.swing.JTextField elev2;
    private javax.swing.JTextField five;
    private javax.swing.JTextField five2;
    private javax.swing.JTextField four;
    private javax.swing.JTextField four2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nine;
    private javax.swing.JTextField nine2;
    private javax.swing.JTextField one;
    private javax.swing.JTextField one1;
    private javax.swing.JButton report;
    private javax.swing.JTextField seven;
    private javax.swing.JTextField seven2;
    private javax.swing.JTextField six;
    private javax.swing.JTextField six2;
    private javax.swing.JPanel sub;
    private javax.swing.JTextField sub5;
    private javax.swing.JTextField sum;
    private javax.swing.JTextField sum2;
    private javax.swing.JTextField ten;
    private javax.swing.JTextField ten2;
    private javax.swing.JTextField three;
    private javax.swing.JTextField three2;
    private javax.swing.JTextField twelve;
    private javax.swing.JTextField twelve2;
    private javax.swing.JTextField two;
    private javax.swing.JTextField two2;
    // End of variables declaration//GEN-END:variables
}
