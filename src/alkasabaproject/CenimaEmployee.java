/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alkasabaproject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.Date;
import java.sql.Time;
import java.text.*;
import javax.swing.table.DefaultTableModel;
//import java.util.Date;

/**
 *
 * @author User
 */
public class CenimaEmployee extends javax.swing.JFrame {
    private String dbURL;
    private String dbUsername = "root";
    private String dbPassword = "1180070";
    private String URL = "127.0.0.1";
    private String port = "3306";
    private String dbName = "Alkasaba_cinema";
    private Connection con;
    PreparedStatement ps = null;
    ResultSet srt = null;
    
    PreparedStatement ps1=null;
    ResultSet rst1=null;
    int showID;    
    String MOVIENAME;
    /**
     * Creates new form CenimaEmployee
     */
    
    public CenimaEmployee() {
        initComponents();
    }
private Connection connection()  {  //throws ClassNotFoundException, SQLException
		
	dbURL = "jdbc:mysql://" + URL + ":" + port + "/" + dbName + "?verifyServerCertificate=false";
	Properties p = new Properties();
	p.setProperty("user", dbUsername);
	p.setProperty("password", dbPassword);
	p.setProperty("useSSL", "false");
	p.setProperty("autoReconnect", "true");
	
	try{
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection (dbURL, p);
            //JOptionPane.showMessageDialog(null,"conncted");
            return con;
        }
		
        catch (SQLException ex){
            Logger.getLogger(Foodmenu.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"not conncted1");
            return null;
        }
        catch (ClassNotFoundException ex1){
            Logger.getLogger(Foodmenu.class.getName()).log(Level.SEVERE, null, ex1);
            JOptionPane.showMessageDialog(null,"not conncted2");
            return null;
        }
    }

    public boolean checkinputs(){
        if (cusid.getText() == null || cusname.getText() == null || cusphone.getText() == null ){
            return false;
        }
        else{
            try{
                Integer.parseInt(cusid.getText());
                Integer.parseInt(cusphone.getText());
                return true;
            }
            catch (Exception ex){
                return false;
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        movie_name = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        date = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        sell = new javax.swing.JButton();
        tickets = new javax.swing.JTextField();
        cusid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cusname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cusphone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        playtic = new javax.swing.JTextField();
        playsell = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Edit Moveis");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, -1));

        jButton3.setText("Viewers Number");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, -1, -1));

        jButton2.setText("Edit Plays");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 410, -1, -1));
        jPanel1.add(movie_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 110, -1));

        jButton4.setText("Show Date&Time");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 370, -1, -1));

        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });
        jPanel1.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 110, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movies"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 140, 100));

        sell.setText("Sell Ticket");
        sell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellActionPerformed(evt);
            }
        });
        jPanel1.add(sell, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, -1, -1));
        jPanel1.add(tickets, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 30, -1));
        jPanel1.add(cusid, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, 40, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, -1, -1));

        cusname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusnameActionPerformed(evt);
            }
        });
        jPanel1.add(cusname, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 110, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Phone");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 220, -1, -1));
        jPanel1.add(cusphone, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 240, 90, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Enter Date");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plays"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 150, 100));
        jPanel1.add(playtic, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, 30, -1));

        playsell.setText("Sell Ticket");
        playsell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playsellActionPerformed(evt);
            }
        });
        jPanel1.add(playsell, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 180, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Customer Info");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Movie Name");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\1202\\Database\\AlkasabaProject\\Captu5re.PNG")); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        con = connection();
        String name = movie_name.getText();

        try {
            String sql = "select count(C.CUS_id) As number_of_viewers from movies m, Customers C, Tickets T where C.CUS_id = T.CUS_id and T.show_id = m.show_id and m.movie_name = '"+ name +"'";
            ps = con.prepareStatement(sql);
            srt = ps.executeQuery();
            while (srt.next()) {
                int number = srt.getInt("number_of_viewers");
                JOptionPane.showMessageDialog(null, "number of viewers is " + number);
            }

        } catch (Exception ex) {
        } finally {
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MovieTable cinema = new MovieTable();
        cinema.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        con = connection();
        String name = movie_name.getText();
        try {
            String sql = "select S.show_date As ShowDate, S.show_time As ShowTime from Shows S , movies m \n"
                    + "where \n"
                    + "     S.show_id = m.show_id and \n"
                    + "     m.movie_name = '" + name + "'";
            ps = con.prepareStatement(sql);
            srt = ps.executeQuery();
            while (srt.next()) {
                Date Date1 = srt.getDate("ShowDate");
                Time time1 = srt.getTime("ShowTime");
                JOptionPane.showMessageDialog(null, "Film showing date  " + Date1 + "\nFilm showing Time  "+ time1);
                

            }

        } catch (Exception ex) {
        } finally {
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        DefaultTableModel model2 = (DefaultTableModel)jTable2.getModel();
        String dateM = date.getText();
       
        con = connection();
        try {
            String sql = "select m.movie_name as nname \n" +
                            "from Shows S , movies m \n" +
                            "where \n" +
                            "      m.show_id = S.show_id and \n" +
                            "      S.show_date = '"+dateM+"'";
            ps = con.prepareStatement(sql);
            srt = ps.executeQuery();
            while (srt.next()) {
                model.addRow(new Object[]{srt.getString(1)});
            }
        } catch (Exception ex) {
        } finally {
        }
        
        try {
            String sql = "select p.play_name as pname \n" +
                            "from Shows S , plays p \n" +
                            "where \n" +
                            "      p.show_id = S.show_id and \n" +
                            "      S.show_date = '"+dateM+"'";
            ps = con.prepareStatement(sql);
            srt = ps.executeQuery();
            while (srt.next()) {
                model2.addRow(new Object[]{srt.getString(1)});
            }
        } catch (Exception ex) {
        } finally {
        }
        
    }//GEN-LAST:event_dateActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int index = jTable1.getSelectedRow();
       MOVIENAME = model.getValueAt(index,0).toString();
       String dateM = date.getText();
      // JOptionPane.showMessageDialog(null,num);
      con = connection();
        try {
            String sql = "select distinct s.numOfTickets as num from Tickets t, Shows s, movies m\n" +
                            "where t.show_id = s.show_id and\n" +
                            "	  s.show_id = m.show_id and\n" +
                            "      m.movie_name = '"+MOVIENAME+"' and\n" +
                            "      S.show_date = '"+dateM+"'";
            ps = con.prepareStatement(sql);
            srt = ps.executeQuery();
            while (srt.next()) {
                int num = srt.getInt("num");
                tickets.setText(String.valueOf(num));
            }
        } catch (Exception ex) {
        } finally {
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void cusnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cusnameActionPerformed

    private void sellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellActionPerformed
        // TODO add your handling code here:
        String Tickets = tickets.getText();
        int tic = Integer.parseInt(Tickets);
        String idcustomer = cusid.getText();
       int CID = Integer.parseInt(idcustomer);
        String name = cusname.getText();
        String phone = cusphone.getText();
        int NUM = Integer.parseInt(phone);
        
        con = connection(); 
        if (tic > 0){
           try {
            String sql = "select s.show_id from Shows s, movies m\n" +
                            "where s.show_id = m.show_id and\n" +
                            "      m.movie_name = '"+MOVIENAME+"'"; 
            ps = con.prepareStatement(sql);
            srt = ps.executeQuery();
            while (srt.next()) {
                showID = srt.getInt("show_id");
                ps = con.prepareStatement("update Shows set numOfTickets = numOfTickets -1\n" +  
                        "where show_id = '"+ showID+"'");
                ps.execute();                
            }
            } catch (Exception ex) {
            } finally {  
            }
           
           try {
            String sql = "select s.numOfTickets as ticnum from Shows s\n" +
                        "where show_id = '"+ showID+"'";
                ps = con.prepareStatement(sql);
                srt = ps.executeQuery();
                while (srt.next()) {
                    int newTic = srt.getInt("ticnum");
                   tickets.setText(String.valueOf(newTic));  
                    //JOptionPane.showMessageDialog(null, newTic);
                }
            } catch (Exception ex) {
            } finally {  
            }
           
           if (checkinputs()){
            try{
            String sql = "insert into Customers values ('"+Integer.parseInt(cusid.getText())+"','"+cusname.getText()+"','"+Integer.parseInt(cusphone.getText())+"')";
            ps = con.prepareStatement(sql);
            ps.execute();
           // JOptionPane.showMessageDialog(null,"Done insert");
            
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        }
        else {
            JOptionPane.showMessageDialog(null,"one or more feilds are empty");
        }
           
        }
        else{
            JOptionPane.showMessageDialog(null, "Tickets sold out " );
        }
    }//GEN-LAST:event_sellActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
         DefaultTableModel model2 = (DefaultTableModel)jTable2.getModel();
        int index = jTable2.getSelectedRow();
       MOVIENAME = model2.getValueAt(index,0).toString();
       String dateM = date.getText();
      // JOptionPane.showMessageDialog(null,num);
      con = connection();
        try {
            String sql = "select distinct s.numOfTickets as num from Tickets t, Shows s, plays p\n" +
                            "where t.show_id = s.show_id and\n" +
                            "	  s.show_id = p.show_id and\n" +
                            "      p.play_name = '"+MOVIENAME+"' and\n" +
                            "      S.show_date = '"+dateM+"'";
            ps = con.prepareStatement(sql);
            srt = ps.executeQuery();
            while (srt.next()) {
                int num = srt.getInt("num");
                playtic.setText(String.valueOf(num));
            }
        } catch (Exception ex) {
        } finally {
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void playsellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playsellActionPerformed
        // TODO add your handling code here:
        String Tickets = playtic.getText();
        int tic = Integer.parseInt(Tickets);
        String idcustomer = cusid.getText();
       int CID = Integer.parseInt(idcustomer);
        String name = cusname.getText();
        String phone = cusphone.getText();
        int NUM = Integer.parseInt(phone);
        
        con = connection(); 
        if (tic > 0){
           try {
            String sql = "select s.show_id from Shows s, plays p\n" +
                            "where s.show_id = p.show_id and\n" +
                            "      p.play_name = '"+MOVIENAME+"'"; 
            ps = con.prepareStatement(sql);
            srt = ps.executeQuery();
            while (srt.next()) {
                showID = srt.getInt("show_id");
                ps = con.prepareStatement("update Shows set numOfTickets = numOfTickets -1\n" +  
                        "where show_id = '"+ showID+"'");
                ps.execute();                
            }
            } catch (Exception ex) {
            } finally {  
            }
           
           try {
            String sql = "select s.numOfTickets as ticnum from Shows s\n" +
                        "where show_id = '"+ showID+"'";
                ps = con.prepareStatement(sql);
                srt = ps.executeQuery();
                while (srt.next()) {
                    int newTic = srt.getInt("ticnum");
                   playtic.setText(String.valueOf(newTic));  
                    //JOptionPane.showMessageDialog(null, newTic);
                }
            } catch (Exception ex) {
            } finally {  
            }
           
           if (checkinputs()){
            try{
            String sql = "insert into Customers values ('"+Integer.parseInt(cusid.getText())+"','"+cusname.getText()+"','"+Integer.parseInt(cusphone.getText())+"')";
            ps = con.prepareStatement(sql);
            ps.execute();
           // JOptionPane.showMessageDialog(null,"Done insert");
            
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        }
        else {
            JOptionPane.showMessageDialog(null,"one or more feilds are empty");
        }
           
        }
        else{
            JOptionPane.showMessageDialog(null, "Tickets sold out " );
        }
    }//GEN-LAST:event_playsellActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        PlayTable cinema = new PlayTable();
        cinema.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CenimaEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CenimaEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CenimaEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CenimaEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CenimaEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cusid;
    private javax.swing.JTextField cusname;
    private javax.swing.JTextField cusphone;
    private javax.swing.JTextField date;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField movie_name;
    private javax.swing.JButton playsell;
    private javax.swing.JTextField playtic;
    private javax.swing.JButton sell;
    private javax.swing.JTextField tickets;
    // End of variables declaration//GEN-END:variables
}
